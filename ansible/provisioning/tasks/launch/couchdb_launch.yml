- name: Start couchdb service
  become: true
  when: "virtual_mode"
  service: 
    name: couchdb 
    state: started

## This assumes that the container engine in question is already installed in the server node
- name: Start couchdb inside a container
  block:
    - name: Start couchdb inside an apptainer/singularity container
      block:

        - name: Copy CouchDB definition file and configuration files
          template:
            src: "templates/couchdb/{{ item }}"
            dest: "{{ couchdb_path }}/{{ item }}"
          with_items:
            - "{{ definition_file }}"
            - debian_couchdb_conf.dat
            - local.ini

        - name: Build image
          shell: "{{ singularity_command_alias }} build {{ image_file }} {{ definition_file }}"
          args:
            chdir: "{{ couchdb_path }}"
            executable: /bin/bash
            creates: "{{ image_file }}"
            
        - name: Check containers status
          shell: "{{ singularity_command_alias }} instance list -j"
          register: apptainer_list_output
          args:
            executable: /bin/bash

        # Advantage: --writable-tmpfs use an in-memory temporary filesystem (faster reads and writes)
        # Problem: These filesystem has a limited size (64 MiB by default) so it is not recommended for long executions
        #
        # - name: Start couchdb apptainer container
        #   shell: "{{ singularity_command_alias }} instance start -C --writable-tmpfs {{ image_file }} {{ container_name }}"
        #   when: "container_name not in apptainer_list_output.stdout"
        #   args:
        #     chdir: "{{ installation_path }}"
        #     executable: /bin/bash

        - name: Start couchdb apptainer container
          shell: "{{ singularity_command_alias }} instance start -C --bind {{ couchdb_path }}/data:/couchdb_data --bind {{ couchdb_path }}/log:/var/log/couchdb {{ image_file }} {{ container_name }}"
          when: "container_name not in apptainer_list_output.stdout"
          args:
            chdir: "{{ couchdb_path }}"
            executable: /bin/bash 

      when: "container_engine == 'apptainer'"
      vars:
        - definition_file: "couchdb_container.def"
        - image_file: "couchdb_container.sif"
        - container_name: "couchdb_cont"

    - name: Start couchdb inside a lxc container
      debug:
        msg: 'Couchdb inside a lxc container not yet supported'
      when: "container_engine == 'lxc'"

  when: "not virtual_mode"
  become: no
