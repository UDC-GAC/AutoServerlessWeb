        
- name: Check if BDWatchdog directory is already there
  stat:
    path: "{{ item }}"
    get_checksum: false
    get_mime: false
    get_attributes: false
  with_items:
    - "{{ bdwatchdog_path }}"
    - "{{ bdwatchdog_source_path }}"
  register: stat_output

- name: Copy BDWatchdog
  #when: not stat_output.stat.exists
  when : not item.1.stat.exists
  copy:
    src: BDWatchdog/
    dest: "{{ item.0 }}"
  with_together:
    - ["{{ bdwatchdog_path }}", "{{ bdwatchdog_source_path }}"]
    - "{{ stat_output.results }}"

## get the user executing the playbook
- name: get the username running the deploy
  become: no
  local_action: command whoami
  register: username_on_the_host

# TODO: read BDWatchdog_data path from BDWatchdog/deployment/config or viceversa
- name: Create a BDWatchdog data directory
  file:
    path: "{{ installation_path }}/BDWatchdog_data"
    state: directory
    owner: "{{ username_on_the_host.stdout_lines[0] }}"
    recurse: yes

- name: Set BDWatchdog sampling frequency
  shell: sed -i s'/atop [0-9]\+/atop {{ sampling_frequency }}/' {{ item }}/MetricsFeeder/scripts/run_atop_stream.sh
  with_items:
    - "{{ bdwatchdog_path }}"
    - "{{ bdwatchdog_source_path }}"
  vars:
    sampling_frequency: "{{ bdwatchdog_sampling_frequency if online_learning == 'no' else power_sampling_frequency }}"

- name: Install BDWatchdog
  shell: bash install.sh
  when: "virtual_mode"
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/"
    executable: /bin/bash
    creates: metrics/opentsdb/build/tsdb

# Workaround: the installation of BDWatchdog may create some ssh files with root as owner
- name: Change ssh files permissions
  when: "virtual_mode"
  file:
    path: "{{ lookup('env', 'HOME') }}/.ssh/{{ item }}"
    owner: "{{ username_on_the_host.stdout_lines[0] }}"
  with_items: ['known_hosts','id_rsa','id_rsa.pub']

- name: Install just OpenTSDB
  shell: bash prepare.sh ssh_setup && cd metrics/ && bash install.sh
  when: "not virtual_mode"
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/"
    executable: /bin/bash
    creates: metrics/opentsdb/build/tsdb

## Stop tmux sessions created by root
- name: Tmux session check
  shell: tmux ls
  register: tmux_output
  ignore_errors: yes

- name: Stop TIMESTAMPING Service
  shell: tmux kill-session -t EVE_TIMES
  when: "'EVE_TIMES' in tmux_output.stdout"

- name: Stop OPENTSDB
  shell: bash stop.sh
  when: "'OPENTSDB' in tmux_output.stdout"
  args:
    chdir: "{{ bdwatchdog_path }}/deployment/metrics"
    executable: /bin/bash

- name: Change BDWatchdog dir owner
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username_on_the_host.stdout_lines[0] }}"
    recurse: yes
  with_items:
    - "{{ bdwatchdog_path }}"
    - "{{ bdwatchdog_source_path }}"

- name: Change BDWatchdog data dir owner
  file:
    path: "{{ installation_path }}/BDWatchdog_data"
    state: directory
    owner: "{{ username_on_the_host.stdout_lines[0] }}"
    recurse: yes

- name: Copy service aliases and port configuration to BDWatchdog dir
  template:
    src: templates/bdw_services_config.yml
    dest: "{{ item }}/services_config.yml"
  with_items:
    - "{{ bdwatchdog_path }}"
    #- "{{ bdwatchdog_source_path }}"
